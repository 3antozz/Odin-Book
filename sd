[1mdiff --git a/api/controllers/comments.js b/api/controllers/comments.js[m
[1mindex f2ec9c0..f0834d8 100644[m
[1m--- a/api/controllers/comments.js[m
[1m+++ b/api/controllers/comments.js[m
[36m@@ -1,15 +1,18 @@[m
 const db = require('../db/queries');[m
 const { cloudinary } = require('../routes/uploadConfig')[m
[32m+[m[32mconst fns = require('../routes/fns');[m
 [m
 exports.createPostTextComment = async(req, res) => {[m
     const userId = req.user.id;[m
     const postId = +req.params.postId;[m
     const { content, authorId } = req.body;[m
[31m-    const comment = await db.createPostComment(userId, postId, content);[m
[32m+[m[32m    const { comment, notification } = await db.createPostComment(userId, postId, content);[m
[32m+[m[32m    const date = fns.formatDate(comment.createdAt)[m
[32m+[m[32m    comment.createdAt = date;[m
     const io = req.app.get('io');[m
[31m-    io.to(`user${authorId}`).emit('new post comment', comment.comment);[m
[31m-    io.to(`user${authorId}`).emit('notification', comment.notification);[m
[31m-    res.json({comment: comment.comment})[m
[32m+[m[32m    io.to(`user${authorId}`).emit('new post comment', comment);[m
[32m+[m[32m    io.to(`user${authorId}`).emit('notification', notification);[m
[32m+[m[32m    res.json({comment})[m
 }[m
 [m
 exports.createPostImageComment = async(req, res) => {[m
[36m@@ -32,36 +35,40 @@[m [mexports.createPostImageComment = async(req, res) => {[m
             return resolve(uploadResult);[m
         }).end(req.file.buffer);[m
     });[m
[31m-    const comment = await db.createPostComment(userId, postId, content, uploadResult.secure_url, uploadResult.public_id);[m
[32m+[m[32m    const { comment, notification } = await db.createPostComment(userId, postId, content, uploadResult.secure_url, uploadResult.public_id);[m
[32m+[m[32m    const date = fns.formatDate(comment.createdAt)[m
[32m+[m[32m    comment.createdAt = date;[m
     const io = req.app.get('io');[m
[31m-    io.to(`user${authorId}`).emit('new post comment', comment.comment);[m
[31m-    io.to(`user${authorId}`).emit('notification', comment.notification);[m
[31m-    res.json({comment: comment.comment})[m
[32m+[m[32m    io.to(`user${authorId}`).emit('new post comment', comment);[m
[32m+[m[32m    io.to(`user${authorId}`).emit('notification', notification);[m
[32m+[m[32m    res.json({comment})[m
 }[m
 [m
 exports.createCommentTextComment = async(req, res) => {[m
     const userId = req.user.id;[m
     const commentId = +req.params.commentId;[m
[31m-    const { content } = req.body;[m
[31m-    const comment = await db.getComment(commentId)[m
[31m-    let newComment;[m
[31m-    if(comment.postId) {[m
[31m-        newComment = await db.createCommentOnComment(userId, comment.postId, content)[m
[32m+[m[32m    const { postId, content } = req.body;[m
[32m+[m[32m    const existingComment = await db.getComment(commentId)[m
[32m+[m[32m    let comment;[m
[32m+[m[32m    let notification;[m
[32m+[m[32m    if(!existingComment.commentOnId) {[m
[32m+[m[32m        ({comment, notification} = await db.createCommentOnComment(userId, +postId, existingComment.postId, content))[m
     } else {[m
[31m-        newComment = await db.createCommentOnComment(userId, comment.commentOnId, content)[m
[32m+[m[32m        ({comment, notification} = await db.createCommentOnComment(userId, +postId, existingComment.commentOnId, content))[m
     }[m
     const io = req.app.get('io');[m
[31m-    io.to(`comment${comment.id}`).emit('new comment comment', comment);[m
[31m-    newComment.comment.commentOn.comments.forEach((comment) => io.to(`user${comment.authorId}`).emit('notification', newComment.notification))[m
[31m-    res.json({comment: newComment.comment})[m
[32m+[m[32m    io.to(`comment${existingComment.id}`).emit('new comment comment', existingComment);[m
[32m+[m[32m    comment.commentOn.comments.forEach((comment) => io.to(`user${comment.authorId}`).emit('notification', notification))[m
[32m+[m[32m    res.json({comment})[m
 }[m
 [m
 exports.createCommentImageComment = async(req, res) => {[m
     const userId = req.user.id;[m
     const commentId = +req.params.commentId;[m
[31m-    const { content } = req.body;[m
[31m-    const comment = await db.getComment(commentId)[m
[31m-    let newComment;[m
[32m+[m[32m    const { postId, content } = req.body;[m
[32m+[m[32m    const existingComment = await db.getComment(commentId)[m
[32m+[m[32m    let comment;[m
[32m+[m[32m    let notification[m
     const options = {[m
         use_filename: false,[m
         overwrite: false,[m
[36m@@ -78,15 +85,15 @@[m [mexports.createCommentImageComment = async(req, res) => {[m
             return resolve(uploadResult);[m
         }).end(req.file.buffer);[m
     });[m
[31m-    if(comment.postId) {[m
[31m-        newComment = await db.createCommentOnComment(userId, comment.postId, content, uploadResult.secure_url, uploadResult.public_id)[m
[32m+[m[32m    if(!existingComment.commentOnId) {[m
[32m+[m[32m        ({comment, notification} = await db.createCommentOnComment(userId, +postId, existingComment.postId, content, uploadResult.secure_url, uploadResult.public_id))[m
     } else {[m
[31m-        newComment = await db.createCommentOnComment(userId, comment.commentOnId, content, uploadResult.secure_url, uploadResult.public_i)[m
[32m+[m[32m        ({comment, notification} = await db.createCommentOnComment(userId, +postId, existingComment.commentOnId, content, uploadResult.secure_url, uploadResult.public_i))[m
     }[m
     const io = req.app.get('io');[m
[31m-    io.to(`comment${comment.id}`).emit('new comment comment', comment);[m
[31m-    newComment.comment.commentOn.comments.forEach((comment) => io.to(`user${comment.authorId}`).emit('notification', newComment.notification))[m
[31m-    res.json({comment: newComment.comment})[m
[32m+[m[32m    io.to(`comment${existingComment.id}`).emit('new comment comment', existingComment);[m
[32m+[m[32m    comment.commentOn.comments.forEach((comment) => io.to(`user${comment.authorId}`).emit('notification', notification))[m
[32m+[m[32m    res.json({comment})[m
 }[m
 [m
 exports.deleteComment = async(req, res) => {[m
[1mdiff --git a/api/controllers/posts.js b/api/controllers/posts.js[m
[1mindex cdb6c22..56322ab 100644[m
[1m--- a/api/controllers/posts.js[m
[1m+++ b/api/controllers/posts.js[m
[36m@@ -3,8 +3,52 @@[m [mconst { cloudinary } = require('../routes/uploadConfig')[m
 const fns = require('../routes/fns');[m
 [m
 exports.getPost = async(req, res) => {[m
[32m+[m[32m    const userId = req.user.id[m
     const postId = +req.params.postId;[m
[31m-    const post = db.getFullPost(postId);[m
[32m+[m[32m    const post = await db.getFullPost(postId);[m
[32m+[m[32m    const date = fns.formatDate(post.createdAt)[m
[32m+[m[32m    post.createdAt = date;[m
[32m+[m[32m    const formattedDates = post.comments.map(comment => {[m
[32m+[m[32m        const date = fns.formatDate(comment.createdAt)[m
[32m+[m[32m        comment.createdAt = date;[m
[32m+[m[32m        const formattedComments = comment.comments.map(comment => {[m
[32m+[m[32m            const date = fns.formatDate(comment.createdAt)[m
[32m+[m[32m            comment.createdAt = date;[m
[32m+[m[32m            return comment;[m
[32m+[m[32m        })[m
[32m+[m[32m        comment.comments = formattedComments;[m
[32m+[m[32m        return comment[m
[32m+[m[32m    })[m
[32m+[m[32m    post.comments = formattedDates;[m
[32m+[m[32m    if(userId) {[m
[32m+[m[32m        for(const like of post.likes) {[m
[32m+[m[32m            console.log("for loop 1")[m
[32m+[m[32m            if(like.userId === userId) {[m
[32m+[m[32m                post.isLiked = true;[m
[32m+[m[32m                break;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        for(const comment1 of post.comments) {[m
[32m+[m[32m            console.log("for loop 2")[m
[32m+[m[32m            for(const like of comment1.likes) {[m
[32m+[m[32m                console.log("for loop 3")[m
[32m+[m[32m                if(like.userId === userId) {[m
[32m+[m[32m                    comment1.isLiked = true;[m
[32m+[m[32m                    break;[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            for(const comment2 of comment1.comments) {[m
[32m+[m[32m                console.log("for loop 4")[m
[32m+[m[32m                for(const like of comment2.likes) {[m
[32m+[m[32m                    console.log("for loop 5")[m
[32m+[m[32m                    if(like.userId === userId) {[m
[32m+[m[32m                        comment2.isLiked = true;[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
     return res.json({post});[m
 }[m
 [m
[36m@@ -19,10 +63,8 @@[m [mexports.getFollowingPosts = async(req, res) => {[m
     const formattedPosts = posts.map(post => {[m
         const date = fns.formatDate(post.createdAt)[m
         post.createdAt = date;[m
[31m-        for(const like of post.likes) {[m
[31m-            if(like.userId === userId) {[m
[31m-                post.isLiked = true;[m
[31m-            }[m
[32m+[m[32m        if(post.likes.length > 0) {[m
[32m+[m[32m            post.isLiked = true;[m
         }[m
         return post;[m
     })[m
[1mdiff --git a/api/db/queries.js b/api/db/queries.js[m
[1mindex 20285d4..f3f8935 100644[m
[1m--- a/api/db/queries.js[m
[1m+++ b/api/db/queries.js[m
[36m@@ -133,12 +133,12 @@[m [mexports.getProfile = async(userId) => {[m
                                     },[m
                                 },[m
                                 orderBy: {[m
[31m-                                    creationDate: 'desc'[m
[32m+[m[32m                                    createdAt: 'desc'[m
                                 }[m
                             }[m
                         },[m
                         orderBy: {[m
[31m-                            creationDate: 'desc'[m
[32m+[m[32m                            createdAt: 'desc'[m
                         }[m
                     }[m
                 },[m
[36m@@ -433,12 +433,12 @@[m [mexports.getFullPost = async(id) => {[m
                             },[m
                         },[m
                         orderBy: {[m
[31m-                            creationDate: 'desc'[m
[32m+[m[32m                            createdAt: 'desc'[m
                         }[m
                     }[m
                 },[m
                 orderBy: {[m
[31m-                    creationDate: 'desc'[m
[32m+[m[32m                    createdAt: 'desc'[m
                 }[m
             }[m
         }[m
[36m@@ -550,12 +550,12 @@[m [mexports.getAllPosts = async() => {[m
                             },[m
                         },[m
                         orderBy: {[m
[31m-                            creationDate: 'desc'[m
[32m+[m[32m                            createdAt: 'desc'[m
                         }[m
                     }[m
                 },[m
                 orderBy: {[m
[31m-                    creationDate: 'desc'[m
[32m+[m[32m                    createdAt: 'desc'[m
                 }[m
             }[m
         },[m
[36m@@ -584,6 +584,12 @@[m [mexports.getFollowingPosts = async(userId) => {[m
             ][m
         },[m
         include: {[m
[32m+[m[32m            _count: {[m
[32m+[m[32m                select: {[m
[32m+[m[32m                    comments: true,[m
[32m+[m[32m                    likes: true[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
             author: {[m
                 omit: {[m
                     password: true,[m
[36m@@ -593,114 +599,159 @@[m [mexports.getFollowingPosts = async(userId) => {[m
                 }[m
             },[m
             likes: {[m
[31m-                include: {[m
[31m-                    user: {[m
[31m-                        omit: {[m
[31m-                            password: true,[m
[31m-                            bio: true,[m
[31m-                            pw_set: true,[m
[31m-                            username: true[m
[31m-                        } [m
[31m-                    }[m
[31m-                },[m
[31m-                orderBy: [[m
[31m-                    {[m
[31m-                        user: {[m
[31m-                            first_name: 'asc'[m
[31m-                        }[m
[31m-                    },[m
[31m-                    {[m
[31m-                        user: {[m
[31m-                            last_name: 'asc'[m
[31m-                        },[m
[31m-                    }[m
[31m-                ][m
[32m+[m[32m                where: {[m
[32m+[m[32m                    userId[m
[32m+[m[32m                }[m
             },[m
             comments: {[m
[31m-                include: {[m
[31m-                    author: {[m
[31m-                        omit: {[m
[31m-                            password: true,[m
[31m-                            bio: true,[m
[31m-                            pw_set: true,[m
[31m-                            username: true[m
[31m-                        }[m
[31m-                    },[m
[31m-                    likes: {[m
[31m-                        include: {[m
[31m-                            user: {[m
[31m-                                omit: {[m
[31m-                                    password: true,[m
[31m-                                    bio: true,[m
[31m-                                    pw_set: true,[m
[31m-                                    username: true[m
[31m-                                } [m
[31m-                            }[m
[31m-                        },[m
[31m-                        orderBy: [[m
[31m-                            {[m
[31m-                                user: {[m
[31m-                                    first_name: 'asc'[m
[31m-                                }[m
[31m-                            },[m
[31m-                            {[m
[31m-                                user: {[m
[31m-                                    last_name: 'asc'[m
[31m-                                },[m
[31m-                            }[m
[31m-                        ][m
[31m-                    },[m
[31m-                    comments: {[m
[31m-                        include: {[m
[31m-                            author: {[m
[31m-                                omit: {[m
[31m-                                    password: true,[m
[31m-                                    bio: true,[m
[31m-                                    pw_set: true,[m
[31m-                                    username: true[m
[31m-                                }[m
[31m-                            },[m
[31m-                            likes: {[m
[31m-                                include: {[m
[31m-                                    user: {[m
[31m-                                        omit: {[m
[31m-                                            password: true,[m
[31m-                                            bio: true,[m
[31m-                                            pw_set: true,[m
[31m-                                            username: true[m
[31m-                                        } [m
[31m-                                    }[m
[31m-                                },[m
[31m-                                orderBy: [[m
[31m-                                    {[m
[31m-                                        user: {[m
[31m-                                            first_name: 'asc'[m
[31m-                                        }[m
[31m-                                    },[m
[31m-                                    {[m
[31m-                                        user: {[m
[31m-                                            last_name: 'asc'[m
[31m-                                        },[m
[31m-                                    }[m
[31m-                                ][m
[31m-                            },[m
[31m-                        },[m
[31m-                        orderBy: {[m
[31m-                            creationDate: 'desc'[m
[32m+[m[32m                select: {[m
[32m+[m[32m                    _count: {[m
[32m+[m[32m                        select: {[m
[32m+[m[32m                            comments: true[m
                         }[m
                     }[m
                 },[m
[31m-                orderBy: {[m
[31m-                    creationDate: 'desc'[m
[31m-                }[m
             }[m
         },[m
[31m-        orderBy: {[m
[31m-            createdAt: 'desc'[m
[31m-        }[m
     })[m
 }[m
 [m
[32m+[m[32m// exports.getFollowingPosts = async(userId) => {[m
[32m+[m[32m//     return await prisma.post.findMany({[m
[32m+[m[32m//         where: {[m
[32m+[m[32m//             OR: [[m
[32m+[m[32m//                 {[m
[32m+[m[32m//                     author: {[m
[32m+[m[32m//                         followers: {[m
[32m+[m[32m//                             some: {[m
[32m+[m[32m//                                 followerId: userId[m
[32m+[m[32m//                             }[m
[32m+[m[32m//                         }[m
[32m+[m[32m//                     }[m
[32m+[m[32m//                 },[m
[32m+[m[32m//                 {[m
[32m+[m[32m//                     authorId: userId[m
[32m+[m[32m//                 }[m
[32m+[m[32m//             ][m
[32m+[m[32m//         },[m
[32m+[m[32m//         include: {[m
[32m+[m[32m//             author: {[m
[32m+[m[32m//                 omit: {[m
[32m+[m[32m//                     password: true,[m
[32m+[m[32m//                     bio: true,[m
[32m+[m[32m//                     pw_set: true,[m
[32m+[m[32m//                     username: true[m
[32m+[m[32m//                 }[m
[32m+[m[32m//             },[m
[32m+[m[32m//             likes: {[m
[32m+[m[32m//                 include: {[m
[32m+[m[32m//                     user: {[m
[32m+[m[32m//                         omit: {[m
[32m+[m[32m//                             password: true,[m
[32m+[m[32m//                             bio: true,[m
[32m+[m[32m//                             pw_set: true,[m
[32m+[m[32m//                             username: true[m
[32m+[m[32m//                         }[m[41m [m
[32m+[m[32m//                     }[m
[32m+[m[32m//                 },[m
[32m+[m[32m//                 orderBy: [[m
[32m+[m[32m//                     {[m
[32m+[m[32m//                         user: {[m
[32m+[m[32m//                             first_name: 'asc'[m
[32m+[m[32m//                         }[m
[32m+[m[32m//                     },[m
[32m+[m[32m//                     {[m
[32m+[m[32m//                         user: {[m
[32m+[m[32m//                             last_name: 'asc'[m
[32m+[m[32m//                         },[m
[32m+[m[32m//                     }[m
[32m+[m[32m//                 ][m
[32m+[m[32m//             },[m
[32m+[m[32m//             comments: {[m
[32m+[m[32m//                 include: {[m
[32m+[m[32m//                     author: {[m
[32m+[m[32m//                         omit: {[m
[32m+[m[32m//                             password: true,[m
[32m+[m[32m//                             bio: true,[m
[32m+[m[32m//                             pw_set: true,[m
[32m+[m[32m//                             username: true[m
[32m+[m[32m//                         }[m
[32m+[m[32m//                     },[m
[32m+[m[32m//                     likes: {[m
[32m+[m[32m//                         include: {[m
[32m+[m[32m//                             user: {[m
[32m+[m[32m//                                 omit: {[m
[32m+[m[32m//                                     password: true,[m
[32m+[m[32m//                                     bio: true,[m
[32m+[m[32m//                                     pw_set: true,[m
[32m+[m[32m//                                     username: true[m
[32m+[m[32m//                                 }[m[41m [m
[32m+[m[32m//                             }[m
[32m+[m[32m//                         },[m
[32m+[m[32m//                         orderBy: [[m
[32m+[m[32m//                             {[m
[32m+[m[32m//                                 user: {[m
[32m+[m[32m//                                     first_name: 'asc'[m
[32m+[m[32m//                                 }[m
[32m+[m[32m//                             },[m
[32m+[m[32m//                             {[m
[32m+[m[32m//                                 user: {[m
[32m+[m[32m//                                     last_name: 'asc'[m
[32m+[m[32m//                                 },[m
[32m+[m[32m//                             }[m
[32m+[m[32m//                         ][m
[32m+[m[32m//                     },[m
[32m+[m[32m//                     comments: {[m
[32m+[m[32m//                         include: {[m
[32m+[m[32m//                             author: {[m
[32m+[m[32m//                                 omit: {[m
[32m+[m[32m//                                     password: true,[m
[32m+[m[32m//                                     bio: true,[m
[32m+[m[32m//                                     pw_set: true,[m
[32m+[m[32m//                                     username: true[m
[32m+[m[32m//                                 }[m
[32m+[m[32m//                             },[m
[32m+[m[32m//                             likes: {[m
[32m+[m[32m//                                 include: {[m
[32m+[m[32m//                                     user: {[m
[32m+[m[32m//                                         omit: {[m
[32m+[m[32m//                                             password: true,[m
[32m+[m[32m//                                             bio: true,[m
[32m+[m[32m//                                             pw_set: true,[m
[32m+[m[32m//                                             username: true[m
[32m+[m[32m//                                         }[m[41m [m
[32m+[m[32m//                                     }[m
[32m+[m[32m//                                 },[m
[32m+[m[32m//                                 orderBy: [[m
[32m+[m[32m//                                     {[m
[32m+[m[32m//                                         user: {[m
[32m+[m[32m//                                             first_name: 'asc'[m
[32m+[m[32m//                                         }[m
[32m+[m[32m//                                     },[m
[32m+[m[32m//                                     {[m
[32m+[m[32m//                                         user: {[m
[32m+[m[32m//                                             last_name: 'asc'[m
[32m+[m[32m//                                         },[m
[32m+[m[32m//                                     }[m
[32m+[m[32m//                                 ][m
[32m+[m[32m//                             },[m
[32m+[m[32m//                         },[m
[32m+[m[32m//                         orderBy: {[m
[32m+[m[32m//                             createdAt: 'desc'[m
[32m+[m[32m//                         }[m
[32m+[m[32m//                     }[m
[32m+[m[32m//                 },[m
[32m+[m[32m//                 orderBy: {[m
[32m+[m[32m//                     createdAt: 'desc'[m
[32m+[m[32m//                 }[m
[32m+[m[32m//             }[m
[32m+[m[32m//         },[m
[32m+[m[32m//         orderBy: {[m
[32m+[m[32m//             createdAt: 'desc'[m
[32m+[m[32m//         }[m
[32m+[m[32m//     })[m
[32m+[m[32m// }[m
[32m+[m
 exports.getPost = async(id) => {[m
     return await prisma.post.findUnique({[m
         where: {[m
[36m@@ -731,11 +782,21 @@[m [mexports.createPost = async(userId, content = null, picture_url = null, public_id[m
                     username: true[m
                 }[m
             },[m
[31m-            comments: {[m
[31m-                include: {[m
[32m+[m[32m            _count: {[m
[32m+[m[32m                select: {[m
                     comments: true,[m
[32m+[m[32m                    likes: true[m
                 }[m
             },[m
[32m+[m[32m            comments: {[m
[32m+[m[32m                select: {[m
[32m+[m[32m                    _count: {[m
[32m+[m[32m                        select: {[m
[32m+[m[32m                            comments: true[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                },[m
[32m+[m[32m            },[m
             likes: true[m
         }[m
     })[m
[36m@@ -827,11 +888,21 @@[m [mexports.createPostComment = async(userId, postId, content = null, picture_url =[m
             public_id[m
         },[m
         include: {[m
[32m+[m[32m            author: {[m
[32m+[m[32m                omit: {[m
[32m+[m[32m                    password: true,[m
[32m+[m[32m                    bio: true,[m
[32m+[m[32m                    pw_set: true,[m
[32m+[m[32m                    username: true[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
             post: {[m
                 select: {[m
                     authorId: true[m
                 }[m
[31m-            }[m
[32m+[m[32m            },[m
[32m+[m[32m            comments: true,[m
[32m+[m[32m            likes: true[m
         }[m
     })[m
     const notification = await prisma.notification.create({[m
[36m@@ -845,7 +916,7 @@[m [mexports.createPostComment = async(userId, postId, content = null, picture_url =[m
     return {comment, notification}[m
 }[m
 [m
[31m-exports.createCommentOnComment = async(userId, commentId, content = null, picture_url = null, public_id = null) => {[m
[32m+[m[32mexports.createCommentOnComment = async(userId, postId, commentId, content = null, picture_url = null, public_id = null) => {[m
     const comment =  await prisma.comment.create({[m
         data: {[m
             author: {[m
[36m@@ -853,6 +924,11 @@[m [mexports.createCommentOnComment = async(userId, commentId, content = null, pictur[m
                     id: userId[m
                 }[m
             },[m
[32m+[m[32m            post: {[m
[32m+[m[32m                connect: {[m
[32m+[m[32m                    id: postId[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
             commentOn: {[m
                 connect: {[m
                     id: commentId[m
[36m@@ -863,6 +939,14 @@[m [mexports.createCommentOnComment = async(userId, commentId, content = null, pictur[m
             public_id[m
         },[m
         include: {[m
[32m+[m[32m            author: {[m
[32m+[m[32m                omit: {[m
[32m+[m[32m                    password: true,[m
[32m+[m[32m                    bio: true,[m
[32m+[m[32m                    pw_set: true,[m
[32m+[m[32m                    username: true[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
             commentOn: {[m
                 select: {[m
                     authorId: true,[m
[36m@@ -872,7 +956,9 @@[m [mexports.createCommentOnComment = async(userId, commentId, content = null, pictur[m
                         }[m
                     }[m
                 }[m
[31m-            }[m
[32m+[m[32m            },[m
[32m+[m[32m            comments: true,[m
[32m+[m[32m            likes: true[m
         }[m
     })[m
     const notificationsData = comment.commentOn.comments.map((comment) => ({[m
[1mdiff --git a/api/db/seed.js b/api/db/seed.js[m
[1mindex ae808ba..9b91432 100644[m
[1m--- a/api/db/seed.js[m
[1m+++ b/api/db/seed.js[m
[36m@@ -64,6 +64,7 @@[m [mconst main = async() => {[m
     const commentsComments = [];[m
     for(let i=0; i < 15; i++) {[m
         try {[m
[32m+[m[32m            const index = Math.floor(Math.random() * postsComments.length);[m
             const comment = await prisma.comment.create({[m
                 data: {[m
                     author: {[m
[36m@@ -72,9 +73,14 @@[m [mconst main = async() => {[m
                         }[m
                     },[m
                     content: faker.lorem.paragraph(1),[m
[32m+[m[32m                    post: {[m
[32m+[m[32m                        connect: {[m
[32m+[m[32m                            id: postsComments[index].postId[m
[32m+[m[32m                        }[m
[32m+[m[32m                    },[m
                     commentOn: {[m
                         connect: {[m
[31m-                            id: postsComments[Math.floor(Math.random() * postsComments.length)].id[m
[32m+[m[32m                            id: postsComments[index].id[m
                         }[m
                     }[m
                 }[m
[36m@@ -157,7 +163,7 @@[m [masync function antozz_following () {[m
         try {[m
             await prisma.follow.create({[m
                 data: {[m
[31m-                    followerId: 2,[m
[32m+[m[32m                    followerId: 16,[m
                     followingId: users[Math.floor(Math.random() * users.length)].id,[m
                 }[m
             })[m
[36m@@ -170,7 +176,7 @@[m [masync function antozz_following () {[m
 async function antozz () {[m
     const antozz = await prisma.user.findUnique({[m
         where: {[m
[31m-            id: 5[m
[32m+[m[32m            username: '3antozz'[m
         },[m
         include: {[m
             following: true,[m
[36m@@ -180,7 +186,7 @@[m [masync function antozz () {[m
     })[m
     console.log(antozz)[m
 }[m
[31m-// antozz_following();[m
[31m-antozz();[m
[32m+[m[32mantozz_following();[m
[32m+[m[32m// antozz();[m
 [m
 // main().then(() => console.log('Seeding completed.')).catch((e) => console.error(e))[m
\ No newline at end of file[m
[1mdiff --git a/api/prisma/schema.prisma b/api/prisma/schema.prisma[m
[1mindex f3dbb92..eba6e6a 100644[m
[1m--- a/api/prisma/schema.prisma[m
[1m+++ b/api/prisma/schema.prisma[m
[36m@@ -60,7 +60,7 @@[m [mmodel Post {[m
   content         String?[m
   picture_url     String?[m
   public_id       String?[m
[31m-  createdAt    DateTime         @default(now())[m
[32m+[m[32m  createdAt       DateTime         @default(now())[m
   comments        Comment[][m
   likes           Like[][m
 }[m
[36m@@ -72,9 +72,9 @@[m [mmodel Comment {[m
   content         String?[m
   picture_url     String?[m
   public_id       String?[m
[31m-  creationDate    DateTime         @default(now())[m
[31m-  post            Post?            @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)[m
[31m-  postId          Int?[m
[32m+[m[32m  createdAt       DateTime         @default(now())[m
[32m+[m[32m  post            Post             @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)[m
[32m+[m[32m  postId          Int[m
   comments        Comment[]        @relation("CommentOnComment")[m
   commentOn       Comment?         @relation("CommentOnComment", fields: [commentOnId], references: [id], onDelete: Cascade, onUpdate: Cascade)[m
   commentOnId     Int?   [m
[1mdiff --git a/api/routes/comments.js b/api/routes/comments.js[m
[1mindex 3a313c3..a0b9bc8 100644[m
[1m--- a/api/routes/comments.js[m
[1m+++ b/api/routes/comments.js[m
[36m@@ -10,9 +10,9 @@[m [mrouter.post('/post/:postId/text', fns.checkAuth, asyncHandler(controller.createP[m
 [m
 router.post('/post/:postId/image', fns.checkAuth, upload.single('image'), asyncHandler(controller.createPostImageComment))[m
 [m
[31m-router.post('/comment/:commentId/text', fns.checkAuth, asyncHandler(controller.createCommentTextComment))[m
[32m+[m[32mrouter.post('/:commentId/text', fns.checkAuth, asyncHandler(controller.createCommentTextComment))[m
 [m
[31m-router.post('/comment/:commentId/image', fns.checkAuth, upload.single('image'), asyncHandler(controller.createCommentImageComment))[m
[32m+[m[32mrouter.post('/:commentId/image', fns.checkAuth, upload.single('image'), asyncHandler(controller.createCommentImageComment))[m
 [m
 router.delete('/:commentId', fns.checkAuth, asyncHandler(controller.deleteComment))[m
 [m
[1mdiff --git a/client/src/App.jsx b/client/src/App.jsx[m
[1mindex e48c8b3..8cde8cf 100644[m
[1m--- a/client/src/App.jsx[m
[1m+++ b/client/src/App.jsx[m
[36m@@ -11,6 +11,7 @@[m [mimport Main from './components/main/main.jsx';[m
 import Notifications from './components/notifications/notifications.jsx';[m
 import Profile from './components/profile/profile.jsx';[m
 import Index from './components/index/index.jsx'[m
[32m+[m[32mimport FullscreenPost from './components/fullscreen-post/fullscreen-post.jsx'[m
 import './App.css'[m
 function App() {[m
   const [user, setUser] = useState(null)[m
[36m@@ -64,6 +65,7 @@[m [mfunction App() {[m
               <Route index element={<Index />} />[m
               <Route path="/notifications" element={<Notifications />} />[m
               <Route path="/profile/:userId" element={<Profile />} />[m
[32m+[m[32m              <Route path="/post/:postId" element={<FullscreenPost />} />[m
             </Route>[m
             <Route element={<AuthLayout />}>[m
               <Route path="/login" element={<Login />} />[m
[1mdiff --git a/client/src/components/index/index.jsx b/client/src/components/index/index.jsx[m
[1mindex 28fc170..62882a0 100644[m
[1m--- a/client/src/components/index/index.jsx[m
[1m+++ b/client/src/components/index/index.jsx[m
[36m@@ -1,45 +1,16 @@[m
 import styles from './index.module.css'[m
[31m-import { useState, useContext, useEffect, useMemo } from 'react'[m
[32m+[m[32mimport { useState, useContext, useMemo } from 'react'[m
 import { useOutletContext } from 'react-router'[m
 import Post from '../post/post'[m
 import { AuthContext } from '../../contexts'[m
 export default function Index () {[m
     const { user, socket, socketOn } = useContext(AuthContext);[m
[31m-    const { posts, setPosts } = useOutletContext();[m
[32m+[m[32m    const { posts, setPosts, handlePostClick } = useOutletContext();[m
     const postsArray = useMemo(() => Object.values(posts).reverse(), [posts])[m
[31m-    const handlePostClick = async(e) => {[m
[31m-        const button = e.target.closest('button')[m
[31m-        if (button && button.dataset.func === 'like') {[m
[31m-            const postId = +button.id;[m
[31m-            try {[m
[31m-                socket.current.emit('post like', postId, (like) => {[m
[31m-                    setPosts(prev => ({...prev, [postId]: {...prev[postId], likes: [like, ...prev[postId].likes] , isLiked: true}}))[m
[31m-                })[m
[31m-            } catch(err) {[m
[31m-                console.log(err)[m
[31m-            }[m
[31m-        }[m
[31m-        if (button && button.dataset.func === 'unlike') {[m
[31m-            const postId = +button.id;[m
[31m-            try {[m
[31m-                socket.current.emit('post unlike', postId, (status) => {[m
[31m-                    if(status === true) {[m
[31m-                        setPosts(prev => {[m
[31m-                            const index = prev[postId].likes.findIndex((like) => like.userId === user.id)[m
[31m-                            prev[postId].likes.splice(index, 1)[m
[31m-                            return {...prev, [postId]: {...prev[postId], isLiked: false}}[m
[31m-                        })[m
[31m-                    }[m
[31m-                })[m
[31m-            } catch(err) {[m
[31m-                console.log(err)[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
     return ([m
[31m-        <main className={styles.main} onClick={handlePostClick}>[m
[32m+[m[32m        <main className={styles.main}>[m
             <AddPost setPosts={setPosts} />[m
[31m-            {postsArray.map(post => <Post key={post.id} post={post} />)}[m
[32m+[m[32m            {postsArray.map(post => <Post key={post.id} post={post} setPosts={setPosts} handlePostClick={handlePostClick} />)}[m
         </main>[m
     )[m
 }[m
[1mdiff --git a/client/src/components/index/index.module.css b/client/src/components/index/index.module.css[m
[1mindex 4b533d1..217807a 100644[m
[1m--- a/client/src/components/index/index.module.css[m
[1m+++ b/client/src/components/index/index.module.css[m
[36m@@ -1,4 +1,6 @@[m
 .main {[m
     border: 2px solid grey;[m
     border-radius: 10px;[m
[32m+[m[32m    max-width: 50rem;[m
[32m+[m[32m    margin: 0 auto;[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/client/src/components/main/main.jsx b/client/src/components/main/main.jsx[m
[1mindex a98851f..8e1ac70 100644[m
[1m--- a/client/src/components/main/main.jsx[m
[1m+++ b/client/src/components/main/main.jsx[m
[36m@@ -4,7 +4,7 @@[m [mimport { Outlet } from 'react-router'[m
 import { useState, useEffect, useContext } from 'react'[m
 import { AuthContext } from '../../contexts'[m
 export default function Main () {[m
[31m-    const { user } = useContext(AuthContext);[m
[32m+[m[32m    const { user, socket } = useContext(AuthContext);[m
     const [posts, setPosts] = useState({})[m
     const [isFetched, setFetched] = useState(false)[m
     const [postsLoading, setPostsLoading] = useState(false)[m
[1mdiff --git a/client/src/components/main/main.module.css b/client/src/components/main/main.module.css[m
[1mindex c567aae..9b4ee6d 100644[m
[1m--- a/client/src/components/main/main.module.css[m
[1m+++ b/client/src/components/main/main.module.css[m
[36m@@ -1,16 +1,11 @@[m
[31m-.main {[m
[31m-    display: flex;[m
[32m+[m[32mmain {[m
[32m+[m[32m    margin-top: 60px !important;[m
 }[m
 [m
[31m-main {[m
[31m-    margin: 0 20vw;[m
[31m-    margin-top: 100px;[m
[32m+[m[32m.main {[m
[32m+[m[32m    padding: 2vw;[m
 }[m
 [m
 [m
 @media (max-width: 800px) {[m
[31m-    main {[m
[31m-        margin: 0 2vw;[m
[31m-        margin-top: 100px;[m
[31m-    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/client/src/components/post/post.jsx b/client/src/components/post/post.jsx[m
[1mindex 605f182..ea295c4 100644[m
[1m--- a/client/src/components/post/post.jsx[m
[1m+++ b/client/src/components/post/post.jsx[m
[36m@@ -1,12 +1,41 @@[m
 import styles from './post.module.css'[m
 import { Link } from 'react-router'[m
 import PropTypes from 'prop-types'[m
[32m+[m[32mimport { useContext } from 'react';[m
 import { Heart, MessageCircle } from 'lucide-react';[m
[31m-export default function Post ({post}) {[m
[31m-    const commentsNumber = post.comments.reduce((total, current) => [m
[31m-        total + 1 + current.comments.length, 0) [m
[32m+[m[32mimport { AuthContext } from '../../contexts'[m
[32m+[m[32mexport default function Post ({post, setPosts}) {[m
[32m+[m[32m    const { socket } = useContext(AuthContext);[m
[32m+[m[32m    const commentsNumber = post._count.comments + post.comments.reduce((total, current) =>[m[41m [m
[32m+[m[32m        total + current._count.comments, 0)[m[41m [m
[32m+[m[32m        const handlePostClick = async(e) => {[m
[32m+[m[32m            e.stopPropagation()[m
[32m+[m[32m            e.preventDefault();[m
[32m+[m[32m            if (e.currentTarget.dataset.func === 'like') {[m
[32m+[m[32m                const postId = +e.currentTarget.id;[m
[32m+[m[32m                try {[m
[32m+[m[32m                    socket.current.emit('post like', postId, () => {[m
[32m+[m[32m                        setPosts(prev => ({...prev, [postId]: {...prev[postId], _count: {...prev[postId]._count, likes: prev[postId]._count.likes + 1} , isLiked: true}}))[m
[32m+[m[32m                    })[m
[32m+[m[32m                } catch(err) {[m
[32m+[m[32m                    console.log(err)[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            if (e.currentTarget.dataset.func === 'unlike') {[m
[32m+[m[32m                const postId = +e.currentTarget.id;[m
[32m+[m[32m                try {[m
[32m+[m[32m                    socket.current.emit('post unlike', postId, (status) => {[m
[32m+[m[32m                        if(status === true) {[m
[32m+[m[32m                            setPosts(prev => ({...prev, [postId]: {...prev[postId], _count: {...prev[postId]._count, likes: prev[postId]._count.likes - 1} , isLiked: false}}))[m
[32m+[m[32m                        }[m
[32m+[m[32m                    })[m
[32m+[m[32m                } catch(err) {[m
[32m+[m[32m                    console.log(err)[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
     return ([m
[31m-        <section className={styles.post}>[m
[32m+[m[32m        <Link to={`/post/${post.id}`} className={styles.post}>[m
             <img src={post.picture_url || '/no-profile-pic.jpg'} alt={`${post.author.first_name} ${post.author.last_name} profile picture`} />[m
             <div className={styles.right}>[m
                 <div className={styles.info}>[m
[36m@@ -17,21 +46,22 @@[m [mexport default function Post ({post}) {[m
                     {post.content}[m
                 </div>[m
                 <div className={styles.interactions}>[m
[31m-                    <button className={styles.likes} id={post.id} data-func={post.isLiked ? "unlike" : "like"}>[m
[31m-                        <Heart fill={post.isLiked ? "red" : null} color={post.isLiked ? null : "white"} />[m
[31m-                        <p>{post.likes.length > 0 ? post.likes.length : ''}</p>[m
[32m+[m[32m                    <button className={styles.likes} onClick={handlePostClick} id={post.id} data-func={post.isLiked ? "unlike" : "like"}>[m
[32m+[m[32m                        <Heart size={35} fill={post.isLiked ? "red" : null} color={post.isLiked ? null : "white"} />[m
[32m+[m[32m                        <p>{post._count.likes > 0 ? post._count.likes : ''}</p>[m
                     </button>[m
[31m-                    <button className={styles.comments} id={post.id} data-func="comment">[m
[31m-                        <MessageCircle />[m
[32m+[m[32m                    <button className={styles.comments} onClick={handlePostClick} id={post.id} data-func="comment">[m
[32m+[m[32m                        <MessageCircle size={35} />[m
                         <p>{commentsNumber > 0 ? commentsNumber : ''}</p>[m
                     </button>[m
                 </div>[m
             </div>[m
[31m-        </section>[m
[32m+[m[32m        </Link>[m
     )[m
 }[m
 [m
 [m
 Post.propTypes = {[m
[31m-    post: PropTypes.object.isRequired[m
[32m+[m[32m    post: PropTypes.object.isRequired,[m
[32m+[m[32m    setPosts: PropTypes.func.isRequired,[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/client/src/components/post/post.module.css b/client/src/components/post/post.module.css[m
[1mindex f5f71cd..58b58da 100644[m
[1m--- a/client/src/components/post/post.module.css[m
[1m+++ b/client/src/components/post/post.module.css[m
[36m@@ -4,6 +4,13 @@[m
     border-radius: 10px;[m
     display: flex;[m
     gap: 1rem;[m
[32m+[m[32m    text-decoration: none;[m
[32m+[m[32m    color: inherit;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.post:hover {[m
[32m+[m[32m    background-color: rgba(30, 26, 24);[m
 }[m
 [m
 .post > img {[m
[36m@@ -30,16 +37,22 @@[m
 .interactions {[m
     display: flex;[m
     align-items: center;[m
[31m-    gap: 1rem;[m
     margin-top: 0.8rem;[m
[32m+[m[32m    gap: 1rem;[m
 }[m
 [m
 .interactions > button {[m
     background: none;[m
     border: none;[m
[32m+[m[32m    padding: 0;[m
     cursor: pointer;[m
     color: inherit;[m
     transition: transform 200ms ease;[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.interactions > button svg {[m
[32m+[m[32m    padding: 0.3rem;[m
 }[m
 [m
 .interactions > button:hover {[m
[36m@@ -47,12 +60,18 @@[m
     color: red;[m
 }[m
 [m
[32m+[m[32m.interactions > button:hover svg {[m
[32m+[m[32m    stroke: red;[m
[32m+[m[32m    background-color: rgba(255, 0, 0, 0.25);[m
[32m+[m[32m    border-radius: 50%;[m
[32m+[m[32m}[m
[32m+[m
 .likes, .comments {[m
     display: flex;[m
     align-items: center;[m
[31m-    gap: 0.2rem;[m
 }[m
 [m
[32m+[m
 .right > div {[m
     margin-bottom: 0.2rem;[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/client/src/components/sidebar/sidebar.jsx b/client/src/components/sidebar/sidebar.jsx[m
[1mindex 6567667..d749198 100644[m
[1m--- a/client/src/components/sidebar/sidebar.jsx[m
[1m+++ b/client/src/components/sidebar/sidebar.jsx[m
[36m@@ -13,10 +13,10 @@[m [mexport default function Sidebar () {[m
                     <House size={30} />[m
                     <p>Home</p>[m
                 </NavLink>[m
[31m-                <NavLink to='/notifications'>[m
[32m+[m[32m                {user &&<NavLink to='/notifications'>[m
                     <Bell size={30} />[m
                     <p>Notifications</p>[m
[31m-                </NavLink>[m
[32m+[m[32m                </NavLink>}[m
                 {user && [m
                 <NavLink to={`/profile/${user.id}`}>[m
                     <User size={30} />[m
[1mdiff --git a/client/src/components/sidebar/sidebar.module.css b/client/src/components/sidebar/sidebar.module.css[m
[1mindex e3da791..cc9ec0b 100644[m
[1m--- a/client/src/components/sidebar/sidebar.module.css[m
[1m+++ b/client/src/components/sidebar/sidebar.module.css[m
[36m@@ -1,6 +1,7 @@[m
 .sidebar {[m
     position: fixed;[m
     display: flex;[m
[32m+[m[32m    top: 0;[m
     justify-content: space-between;[m
     width: 100%;[m
     padding: 0.5rem 2vw;[m
[36m@@ -79,6 +80,9 @@[m [mnav > a:hover, .logout:hover, .login:hover {[m
     .sidebar {[m
         padding: 0.5rem 0.2rem;[m
     }[m
[32m+[m[32m    .sidebar h2 {[m
[32m+[m[32m        font-size: 1.1rem;[m
[32m+[m[32m    }[m
     .sidebar a > svg, .sidebar button > svg {[m
         width: 1.7rem;[m
     }[m
